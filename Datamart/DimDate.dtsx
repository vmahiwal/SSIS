<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/28/2014 10:13:00 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="L080027"
  DTS:CreatorName="TELUS\x167115"
  DTS:DTSID="{FE444F62-959D-4663-9B63-1138A9382A87}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.4001.0"
  DTS:LocaleID="3084"
  DTS:ObjectName="DimDate"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="81"
  DTS:VersionGUID="{D9DDD14F-9048-487D-AA46-C53ECC917CF6}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="7"
      DTS:DTSID="{8618A0AC-A314-495B-B1A4-FE87CF8EF8F2}"
      DTS:ObjectName="EndDate">
      <DTS:Property
        DTS:DataType="7"
        DTS:Name="ParameterValue">1/1/2100</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:Description="Reference to ETLFrameworl load identifier."
      DTS:DTSID="{889D82E6-BBF1-4308-BAE0-755D9621250F}"
      DTS:ObjectName="LoadId"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="7"
      DTS:DTSID="{795EEECF-C017-400C-B2C3-55A646741FFB}"
      DTS:ObjectName="StartDate">
      <DTS:Property
        DTS:DataType="7"
        DTS:Name="ParameterValue">1/1/1900</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{42379FDC-776C-4EC5-BCD2-D55D1E1FEB8E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EndDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/2100</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{62AD3C63-CAA6-4F84-80B7-D684FAC48DA2}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="StartDate">
      <DTS:VariableValue
        DTS:DataType="7">1/1/1900</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\dft_DW_DimDate"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{8DB153FC-5A4C-4EC5-A848-72BBED1A34DA}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:ISOLevel="4096"
      DTS:LocaleID="-1"
      DTS:ObjectName="dft_DW_DimDate"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey"
              componentClassID="Microsoft.CopyMap"
              contactInfo="Copy Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Copies input columns to new columns in the transformation output. For example, create a copy of the 'address' column so that it can be cleaned by subsequent transformations and leave the original column in place for auditing."
              name="cpyc_DateTextTranslationKey">
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Inputs[Copy Column Input]"
                  name="Copy Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Inputs[Copy Column Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Outputs[Copy Column Output]"
                  name="Copy Column Output"
                  synchronousInputId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Inputs[Copy Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Outputs[Copy Column Output].Columns[DateTextTranslationKey]"
                      dataType="i8"
                      lineageId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Outputs[Copy Column Output].Columns[DateTextTranslationKey]"
                      name="DateTextTranslationKey">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the column to copy."
                          name="copyColumnId">#{Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\der_CalendarYearMonth"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="der_CalendarYearMonth"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Inputs[Derived Column Input].Columns[MonthOfYear]"
                      cachedDataType="ui1"
                      cachedName="MonthOfYear"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Inputs[Derived Column Input].Columns[CalendarYear]"
                      cachedDataType="i2"
                      cachedName="CalendarYear"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\dft_DW_DimDate\der_CalendarYearMonth.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output].Columns[CalendarYearMonth]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output].Columns[CalendarYearMonth]"
                      name="CalendarYearMonth"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,6,1252)((DT_STR,4,1252)#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]} + [RIGHT]("0" + (DT_STR,2,1252)#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]},2))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,6,1252)((DT_STR,4,1252)CalendarYear + RIGHT("0" + (DT_STR,2,1252)MonthOfYear,2))</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\der_CalendarYearMonth.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\der_DimDateAttributes"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="der_DimDateAttributes"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\der_DimDateAttributes.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Inputs[Derived Column Input].Columns[CurrentDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrentDate"
                      lineageId="Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\dft_DW_DimDate\der_DimDateAttributes.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[FullDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[FullDate]"
                      name="FullDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_DBDATE)#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_DBDATE)CurrentDate</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfYear]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfYear]"
                      name="DayOfYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("dy",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("dy",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfMonth]"
                      dataType="ui1"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfMonth]"
                      name="DayOfMonth"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_UI1)[DATEPART]("d",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_UI1)DATEPART("d",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfTheWeek]"
                      dataType="ui1"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfTheWeek]"
                      name="DayOfTheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_UI1)[DATEPART]("dw",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_UI1)DATEPART("dw",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekdayWeekend]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="10"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekdayWeekend]"
                      name="WeekdayWeekend"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_STR,10,1252)(([DATEPART]("dw",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}) == 1 || [DATEPART]("dw",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}) == 7) ? "Weekend" : "Week day")</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_STR,10,1252)((DATEPART("dw",CurrentDate) == 1 || DATEPART("dw",CurrentDate) == 7) ? "Weekend" : "Week day")</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]"
                      dataType="ui1"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]"
                      name="MonthOfYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_UI1)[DATEPART]("mm",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_UI1)DATEPART("mm",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekOfYear]"
                      dataType="ui1"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekOfYear]"
                      name="WeekOfYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_UI1)[DATEPART]("ww",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_UI1)DATEPART("ww",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]"
                      dataType="i2"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]"
                      name="CalendarYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I2)[DATEPART]("yyyy",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I2)DATEPART("yyyy",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[IsLastDayOfTheMonth]"
                      dataType="bool"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[IsLastDayOfTheMonth]"
                      name="IsLastDayOfTheMonth"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]} == ([DATEADD]("D",-([DAY]([DATEADD]("M",1,#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}))),[DATEADD]("M",1,#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">CurrentDate == (DATEADD("D",-(DAY(DATEADD("M",1,CurrentDate))),DATEADD("M",1,CurrentDate)))</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarQuarter]"
                      dataType="ui1"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarQuarter]"
                      name="CalendarQuarter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_UI1)[DATEPART]("q",#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_UI1)DATEPART("q",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\der_DimDateAttributes.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\der_LoadId"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="der_LoadId"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\der_LoadId.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\der_LoadId.Inputs[Derived Column Input].Columns[CurrentDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrentDate"
                      lineageId="Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\dft_DW_DimDate\der_LoadId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[LoadId]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[LoadId]"
                      name="LoadId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::LoadId]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::LoadId]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I8)((DT_WSTR,4)[YEAR](#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}) + [RIGHT]("0" + (DT_WSTR,2)[MONTH](#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}),2) + [RIGHT]("0" + (DT_WSTR,2)[DAY](#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}),2))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I8)((DT_WSTR,4)YEAR(CurrentDate) + RIGHT("0" + (DT_WSTR,2)MONTH(CurrentDate),2) + RIGHT("0" + (DT_WSTR,2)DAY(CurrentDate),2))</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\der_LoadId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="lkp_Datamart_DimDate_AllCols"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DateKey, DayOfTheWeek, DayOfMonth, DayOfYear, WeekdayWeekend, WeekOfYear, MonthOfYear, IsLastDayOfTheMonth, CalendarQuarter, CalendarYear, 
                  CalendarYearMonth
FROM   DW.DimDate</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT DateKey, DayOfTheWeek, DayOfMonth, DayOfYear, WeekdayWeekend, WeekOfYear, MonthOfYear, IsLastDayOfTheMonth, CalendarQuarter, CalendarYear, 
                  CalendarYearMonth
FROM     Datamart.DimDate) [refTable]
where [refTable].[DayOfMonth] = ? and [refTable].[DayOfTheWeek] = ? and [refTable].[WeekdayWeekend] = ? and [refTable].[MonthOfYear] = ? and [refTable].[WeekOfYear] = ? and [refTable].[CalendarYear] = ? and [refTable].[IsLastDayOfTheMonth] = ? and [refTable].[CalendarQuarter] = ? and [refTable].[CalendarYearMonth] = ? and [refTable].[DateKey] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DateKey" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayOfTheWeek" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayOfMonth" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="DayOfYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="WeekdayWeekend" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="WeekOfYear" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="MonthOfYear" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsLastDayOfTheMonth" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarQuarter" dataType="DT_UI1" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarYear" dataType="DT_I2" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CalendarYearMonth" dataType="DT_STR" length="10" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfMonth]};#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfTheWeek]};#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekdayWeekend]};#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]};#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekOfYear]};#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]};#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[IsLastDayOfTheMonth]};#{Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarQuarter]};#{Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output].Columns[CalendarYearMonth]};#{Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Match Output].Columns[DateKey]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Connections[OleDbConnection]"
                  connectionManagerID="{25BA1AB6-6CD3-4756-B825-F73689CC7A27}:external"
                  connectionManagerRefId="Project.ConnectionManagers[cmgr_DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[DayOfTheWeek]"
                      cachedDataType="ui1"
                      cachedName="DayOfTheWeek"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfTheWeek]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DayOfTheWeek</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[DayOfMonth]"
                      cachedDataType="ui1"
                      cachedName="DayOfMonth"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfMonth]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DayOfMonth</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[WeekdayWeekend]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedName="WeekdayWeekend"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekdayWeekend]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">WeekdayWeekend</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[MonthOfYear]"
                      cachedDataType="ui1"
                      cachedName="MonthOfYear"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">MonthOfYear</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[WeekOfYear]"
                      cachedDataType="ui1"
                      cachedName="WeekOfYear"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekOfYear]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">WeekOfYear</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[CalendarQuarter]"
                      cachedDataType="ui1"
                      cachedName="CalendarQuarter"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarQuarter]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CalendarQuarter</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[CalendarYear]"
                      cachedDataType="i2"
                      cachedName="CalendarYear"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CalendarYear</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[IsLastDayOfTheMonth]"
                      cachedDataType="bool"
                      cachedName="IsLastDayOfTheMonth"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[IsLastDayOfTheMonth]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">IsLastDayOfTheMonth</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[CalendarYearMonth]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="6"
                      cachedName="CalendarYearMonth"
                      lineageId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output].Columns[CalendarYearMonth]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CalendarYearMonth</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      lineageId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Match Output].Columns[DateKey]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DateKey</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="lkp_Datamart_DimDate_currentdate"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DateKey, FullDate
FROM     DW.DimDate</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT DateKey, FullDate
FROM     Datamart.DimDate) [refTable]
where [refTable].[FullDate] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DateKey" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="FullDate" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Connections[OleDbConnection]"
                  connectionManagerID="{25BA1AB6-6CD3-4756-B825-F73689CC7A27}:external"
                  connectionManagerRefId="Project.ConnectionManagers[cmgr_DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Inputs[Lookup Input].Columns[CurrentDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrentDate"
                      lineageId="Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">FullDate</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Match Output].Columns[DateKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Match Output].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">DateKey</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="lkp_Util_DateTextTranslation_datetranslationkey"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT DateTextTranslationKey
FROM     Util.DateTextTranslation</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT DateTextTranslationKey
FROM     Util.DateTextTranslation) [refTable]
where [refTable].[DateTextTranslationKey] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DateTextTranslationKey" dataType="DT_I8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Connections[OleDbConnection]"
                  connectionManagerID="{25BA1AB6-6CD3-4756-B825-F73689CC7A27}:external"
                  connectionManagerRefId="Project.ConnectionManagers[cmgr_DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Inputs[Lookup Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">DateTextTranslationKey</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="ole_cmd_upd_DW_DimDate_Type1Cols"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">UPDATE [DW].[DimDate]
   SET 
       [DayOfTheWeek] = ?
      ,[DayOfMonth] = ?
      ,[DayOfYear] = ?
      ,[WeekdayWeekend] = ?
      ,[WeekOfYear] = ?
      ,[MonthOfYear] = ?
      ,[IsLastDayOfTheMonth] = ?
      ,[CalendarQuarter] = ?
      ,[CalendarYear] = ?
      ,[CalendarYearMonth] = ?
      ,[LoadID] = ?
 WHERE [DateKey] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Connections[OleDbConnection]"
                  connectionManagerID="{25BA1AB6-6CD3-4756-B825-F73689CC7A27}:external"
                  connectionManagerRefId="Project.ConnectionManagers[cmgr_DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[DayOfTheWeek]"
                      cachedDataType="ui1"
                      cachedName="DayOfTheWeek"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfTheWeek]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[DayOfMonth]"
                      cachedDataType="ui1"
                      cachedName="DayOfMonth"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfMonth]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[DayOfYear]"
                      cachedDataType="i4"
                      cachedName="DayOfYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[WeekdayWeekend]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedName="WeekdayWeekend"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekdayWeekend]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[WeekOfYear]"
                      cachedDataType="ui1"
                      cachedName="WeekOfYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[MonthOfYear]"
                      cachedDataType="ui1"
                      cachedName="MonthOfYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[IsLastDayOfTheMonth]"
                      cachedDataType="bool"
                      cachedName="IsLastDayOfTheMonth"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[IsLastDayOfTheMonth]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[CalendarQuarter]"
                      cachedDataType="ui1"
                      cachedName="CalendarQuarter"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarQuarter]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[CalendarYear]"
                      cachedDataType="i2"
                      cachedName="CalendarYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[CalendarYearMonth]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="6"
                      cachedName="CalendarYearMonth"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      lineageId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output].Columns[CalendarYearMonth]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[LoadId]"
                      cachedDataType="i4"
                      cachedName="LoadId"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[LoadId]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      lineageId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Match Output].Columns[DateKey]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="ui1"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="ui1"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="ui1"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="ui1"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="bool"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_7]"
                      dataType="ui1"
                      name="Param_7">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_8]"
                      dataType="i2"
                      name="Param_8">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_9]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      name="Param_9">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_10]"
                      dataType="i4"
                      name="Param_10">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input].ExternalColumns[Param_11]"
                      dataType="i8"
                      name="Param_11">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ole_dst_DW_DimDate"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DW].[DimDate]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Connections[OleDbConnection]"
                  connectionManagerID="{25BA1AB6-6CD3-4756-B825-F73689CC7A27}:external"
                  connectionManagerRefId="Project.ConnectionManagers[cmgr_DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[LoadId]"
                      cachedDataType="i4"
                      cachedName="LoadId"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[LoadId]"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[LoadId]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[DateKey]"
                      cachedDataType="i8"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      lineageId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[DateTextTranslationKey]"
                      cachedDataType="i8"
                      cachedName="DateTextTranslationKey"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DateTextTranslationKey]"
                      lineageId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Outputs[Copy Column Output].Columns[DateTextTranslationKey]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[FullDate]"
                      cachedDataType="dbDate"
                      cachedName="FullDate"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[FullDate]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[FullDate]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[DayOfYear]"
                      cachedDataType="i4"
                      cachedName="DayOfYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DayOfYear]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[DayOfMonth]"
                      cachedDataType="ui1"
                      cachedName="DayOfMonth"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DayOfMonth]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfMonth]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[DayOfTheWeek]"
                      cachedDataType="ui1"
                      cachedName="DayOfTheWeek"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DayOfTheWeek]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[DayOfTheWeek]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[WeekdayWeekend]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="10"
                      cachedName="WeekdayWeekend"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[WeekdayWeekend]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekdayWeekend]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[MonthOfYear]"
                      cachedDataType="ui1"
                      cachedName="MonthOfYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[MonthOfYear]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[WeekOfYear]"
                      cachedDataType="ui1"
                      cachedName="WeekOfYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[WeekOfYear]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[CalendarYear]"
                      cachedDataType="i2"
                      cachedName="CalendarYear"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[CalendarYear]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[IsLastDayOfTheMonth]"
                      cachedDataType="bool"
                      cachedName="IsLastDayOfTheMonth"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[IsLastDayOfTheMonth]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[IsLastDayOfTheMonth]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[CalendarQuarter]"
                      cachedDataType="ui1"
                      cachedName="CalendarQuarter"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[CalendarQuarter]"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[CalendarQuarter]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].Columns[CalendarYearMonth]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="6"
                      cachedName="CalendarYearMonth"
                      externalMetadataColumnId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[CalendarYearMonth]"
                      lineageId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output].Columns[CalendarYearMonth]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      dataType="i8"
                      name="DateKey" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DateTextTranslationKey]"
                      dataType="i8"
                      name="DateTextTranslationKey" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[FullDate]"
                      dataType="dbDate"
                      name="FullDate" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DayOfYear]"
                      dataType="i4"
                      name="DayOfYear" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DayOfMonth]"
                      dataType="ui1"
                      name="DayOfMonth" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[DayOfTheWeek]"
                      dataType="ui1"
                      name="DayOfTheWeek" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[WeekdayWeekend]"
                      codePage="1252"
                      dataType="str"
                      length="10"
                      name="WeekdayWeekend" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[MonthOfYear]"
                      dataType="ui1"
                      name="MonthOfYear" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[WeekOfYear]"
                      dataType="ui1"
                      name="WeekOfYear" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[CalendarYear]"
                      dataType="i2"
                      name="CalendarYear" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[IsLastDayOfTheMonth]"
                      dataType="bool"
                      name="IsLastDayOfTheMonth" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[CalendarQuarter]"
                      dataType="ui1"
                      name="CalendarQuarter" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[CalendarYearMonth]"
                      codePage="1252"
                      dataType="str"
                      length="6"
                      name="CalendarYearMonth" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[LoadId]"
                      dataType="i4"
                      name="LoadId" />
                    <externalMetadataColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input].ExternalColumns[WeekOfTheMonth]"
                      dataType="ui1"
                      name="WeekOfTheMonth" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\scr_src_CurrDate"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="scr_src_CurrDate"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public DateTime EndDate
    {
        get
        {
            return (DateTime)(ParentComponent.ReadOnlyVariables["EndDate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public DateTime StartDate
    {
        get
        {
            return (DateTime)(ParentComponent.ReadOnlyVariables["StartDate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    DateTime _Date;
    DateTime _EndDate;
    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        _Date = this.Variables.StartDate;
        _EndDate = this.Variables.EndDate;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        try
        {

            while (_Date < _EndDate)
            {
                Output0Buffer.AddRow();
                Output0Buffer.CurrentDate = _Date;
                _Date = _Date.AddDays(1);
            }
        }
        catch (Exception ex)
        {
            bool _FireAgain = false;
            this.ComponentMetaData.FireInformation(0, "CreateOutputRows", _Date.ToString(), string.Empty, 0, ref _FireAgain);
        }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime CurrentDate
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CurrentDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Settings.get_Default():SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Sett" +
    "ings")]

namespace SC_803636c552c24fe1bc1c261fa6845e2c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_803636c552c24fe1bc1c261fa6845e2c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5b171c41-3456-410b-b06c-39f45c70f869}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_803636c552c24fe1bc1c261fa6845e2c</RootNamespace>
    <AssemblyName>SC_803636c552c24fe1bc1c261fa6845e2c</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_803636c552c24fe1bc1c261fa6845e2c" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_803636c552c24fe1bc1c261fa6845e2c</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_803636c552c24fe1bc1c261fa6845e2c</msb:DisplayName>
		<msb:ProjectId>{7CE92E98-42DA-4B8E-8C4C-1B89C08DA0A3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_803636c552c24fe1bc1c261fa6845e2c.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_803636c552c24fe1bc1c261fa6845e2c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TELUS Communications Inc")]
[assembly: AssemblyProduct("SC_803636c552c24fe1bc1c261fa6845e2c")]
[assembly: AssemblyCopyright("Copyright @ TELUS Communications Inc 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_803636c552c24fe1bc1c261fa6845e2c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_803636c552c24fe1bc1c261fa6845e2c.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK7aiFkAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAApjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQ1AABPAAAAAEAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
NQAAAAAAAEgAAAACAAUAyCIAANQRAAABAAAAAAAAAJw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYCKBAAAAoCAnsEAAAEbxMAAAZ9AQAABAICewQAAARvEgAA
Bn0CAAAEKh4CKBEAAAoqAAAbMAcAdwAAAAEAABErNgJ7BQAABG8IAAAGAnsFAAAEAnsBAAAEbwYA
AAYCAnwBAAAEIwAAAAAAAPA/KBIAAAp9AQAABAJ7AQAABAJ7AgAABCgTAAAKLbfeKSYWCgIoFAAA
ChZyAQAAcAJ8AQAABCgVAAAKfhYAAAoWEgBvFwAACt4AKgABEAAAAAAAAE1NACkPAAABHgIoCwAA
BioqAgMEBSgYAAAKKjoCFgOMDgAAASgZAAAKKloDLAgCFigaAAAKKnIjAABwcxsAAAp6HgIoHAAA
CioeAigdAAAKKh4CKB4AAAoqfgIoHwAACgICcxAAAAZ9AwAABAICcxEAAAZ9BAAABCoGKm4CewUA
AAQsEgJ7BQAABG8JAAAGAhR9BQAABCoAEzAFAEkAAAACAAARFgorLgQGlA4EcsAAAHAoIAAACjMZ
AgUGmgIEBpQoIQAACg4EcwUAAAZ9BQAABAYXWAoGAzLOAm8PAAAGAm8MAAAGAigNAAAGKjoCKCIA
AAoCA30GAAAEKjoCKCIAAAoCA30HAAAEKpYCewcAAARvIwAACnLSAABwbyQAAAooJQAACm8mAAAK
pQ4AAAEqlgJ7BwAABG8jAAAKcuIAAHBvJAAACiglAAAKbyYAAAqlDgAAASoeAigiAAAKKq5+CAAA
BC0ecvYAAHDQBwAAAignAAAKbygAAApzKQAACoAIAAAEfggAAAQqGn4JAAAEKh4CgAkAAAQqGn4K
AAAEKh4CKCoAAAoqLnMZAAAGgAoAAAQqAAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAABAYAACN+AABwBgAA1AcAACNTdHJpbmdzAAAAAEQOAABoAQAAI1VTAKwPAAAQAAAAI0dV
SUQAAAC8DwAAGAIAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAAACUAAAAIAAAA
CgAAABoAAAAMAAAAKgAAABAAAAACAAAABAAAAAcAAAAIAAAAAQAAAAYAAAABAAAAAACbAwEAAAAA
AAYAkwKoBQYAJwOoBQYA3wGVBQ8AHAYAAAYADAJYBAYAdgJYBAYAVwJYBAYADgNYBAYAswJYBAYA
zAJYBAYAIwJYBAYAPgJiAwoA5wL8AAYA8wD0AwYAegT0AwoADAX8AA4A/QT8AAoAkAT8AAoAHAf8
AAYA3Ab0AwYAwgGVBQYAHQXIBQYAhARDBBIAkgGFAxIA8wGFAxIASgEuBAYApwGoBRYAAQBVBQYA
fgP0AwYAagT0AxoAKgAtBRoAGgAtBU8AigcAABoAOwAtBQYAHQH0AwYAzwD0AwYAxQdYBAAAAABT
AAAAAAABAAEAAQAQABMEAAAQAAEAAQABABAA7wQAAEEAAwAFAAEAEAD+BgAATQADAAsAAQAQAJ4G
AABRAAYAEAABABAAZgYAAFEABwARAAAAEADPBSsGUQAIABQAAAEQAJUGKwZpAAoAGAABAGIBqwAB
AGsBqwAGAJ4GrwAGAGYGswAGAO8EtwABAAwHuwABAAwHuwARAPsDvwARADoBwwARAL8AxwBQIAAA
AADGAEUDBgABAHogAAAAAMYAUAMGAAEAhCAAAAAAxgDABgYAAQAYIQAAAACGGH4FBgABACAhAAAA
AIYYfgVEAAEAKyEAAAAAhgh0AcsABAA6IQAAAACGCMMD0QAFAFEhAAAAAIYAugcGAAYAWSEAAAAA
hgDjBgYABgBhIQAAAACGAOYGVAAGAGkhAAAAAIYYfgUGAAYAiSEAAAAAxgGyBgYABgCLIQAAAACB
AKsABgAGAKghAAAAAMYAagfWAAYAiSEAAAAAxgHABgYACgD9IQAAAACGGH4F4gAKAAwiAAAAAIYY
fgXiAAsAGyIAAAAAhghoAegADABBIgAAAACGCIQB6AAMAGciAAAAAIMYfgUGAAwAbyIAAAAAkwgZ
Be0ADACbIgAAAACTCCIB8gAMAKIiAAAAAJMILgH3AAwAqiIAAAAAlgjyBv0ADQCxIgAAAACGGH4F
BgANALkiAAAAAJEYhAUCAQ0AAAABABIFAAACAHAGAAADAJ4EAAABAFwDAAABAFwDAAABALgGAAAC
AIsFAAADAKoGAAAEAJ4EAAABACIHAAABACIHAAABAFwDCQB+BQEAEQB+BQYAGQB+BQoAKQB+BRAA
MQB+BRAAOQB+BRAAQQB+BRAASQB+BRAAUQB+BRAAWQB+BRAAYQB+BRAAaQB+BQYAqQB+BQYAyQB+
BRUA2QB+BQYAmQBFAwYAmQBQAwYAcQDUBh8AcQAHBCUAmQBoAC0AcQB8AzIA6QDOBzYA4QAeBDkA
gQB+BUQAgQDrA04AgQDaAwEA8QB+BRAAgQC6BwYAgQDjBgYAgQDmBlQAmQB+BQYAmQBcAFwAmQCE
BmMAoQB+BQYAmQBaBmkA+QDiA24AmQClB3UAAQF2B3sAGQHhAIIAGQHBB4sAsQB+BZEA0QB+BQYA
LgALAB4BLgATACcBLgAbAEYBLgAjAE8BLgArAHgBLgAzAHgBLgA7AH4BLgBDAE8BLgBLAJwBLgBT
AHgBLgBbAMsBQwBjABMCqQBzAEYByQBzAEYB4wBrABMCQQF7ABMCGwBYAAMAAQAGAAMABwAFAAgA
BwAAAHgBBgEAAMcDCwEAAGwBBgEAAIgBBgEAAB0FDwEAAEIBFAEAAPYGGQEBAAYAAwABAAcABQAC
ABIABwACABMACQACABUACwACABYADQABABcADQACABgADwAEgAAAAQAAAAAAAAAAAAAAAACHAAAA
BAAAAAAAAAAAAAAAmQB+AAAAAAANAAAAAAAAAAAAAACiACwHAAAAAA0AAAAAAAAAAAAAAKIASQcA
AAAABAAAAAAAAAAAAAAAmQD0AwAAAAANAAAAAAAAAAAAAACiAMsEAAAAAA0AAAAAAAAAAAAAAKIA
qAQAAAAAAAAAAAEAAADZBQAAAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1Zhcmlh
YmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAPE1vZHVsZT4A
R2V0T3V0cHV0SUQAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFNDXzgwMzYzNmM1NTJj
MjRmZTFiYzFjMjYxZmE2ODQ1ZTJjAE1hcmtPdXRwdXRzRmluaXNoZWQAZGVmYXVsdEluc3RhbmNl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAF9EYXRlAGdldF9FbmREYXRlAHNldF9D
dXJyZW50RGF0ZQBnZXRfU3RhcnREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2Vu
ZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0
dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBB
c3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1i
bHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29t
cGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNz
ZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRy
aWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmli
dXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBUb1N0cmluZwBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfODAzNjM2YzU1MmMyNGZlMWJjMWMy
NjFmYTY4NDVlMmMuZGxsAHNldF9DdXJyZW50RGF0ZV9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4Ab3BfTGVzc1RoYW4AU2NyaXB0TWFpbgBGaXJlSW5m
b3JtYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVt
LlJlZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAE91dHB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzgwMzYzNmM1NTJjMjRmZTFi
YzFjMjYxZmE2ODQ1ZTJjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTQ184MDM2MzZjNTUyYzI0ZmUxYmMxYzI2MWZhNjg0NWUyYy5Qcm9wZXJ0aWVzAGdldF9S
ZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0
dGluZ3MAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJv
d3MAQWRkRGF5cwBPYmplY3QAU2V0RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QAUHJpbWVPdXRwdXQAR2V0VmFs
dWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29u
dGV4dABBZGRSb3cAZ2V0X0Fzc2VtYmx5AEVtcHR5AAAhQwByAGUAYQB0AGUATwB1AHQAcAB1AHQA
UgBvAHcAcwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAA
YgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBs
AHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AABFPAHUA
dABwAHUAdAAgADAAAA9FAG4AZABEAGEAdABlAAATUwB0AGEAcgB0AEQAYQB0AGUAAHFTAEMAXwA4
ADAAMwA2ADMANgBjADUANQAyAGMAMgA0AGYAZQAxAGIAYwAxAGMAMgA2ADEAZgBhADYAOAA0ADUA
ZQAyAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAANPpVdG0ZBBB
mlLBR0415ysABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEDBwECBSABETkNBwACAhE5ETkEIAAS
cQMgAA4CBg4KIAYBCA4ODggQAgkgAwESRR0IEkkFIAIBCBwDIAACAwcBCAYAAggSSQ4FIAEdCAgE
IAASfQYgARKAgRwFAAASgIUGIAEcEoCJCAABEoCNEYCRBSAAEoCVByACAQ4SgJUIt3pcVhk04IkI
iYRdzYCAzJEDBhE5AwYSFAMGEhgDBhIMAwYSTQMGElkDBhJdAwYSIAUgAQEROQQgAQECCyAEAQgd
CB0SRRJJBSABARJNBCAAETkEAAASWQQAABJdBQABARJdBAAAEiADAAABBCgAETkDKAACBAgAElkE
CAASXQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTQ184MDM2MzZjNTUyYzI0ZmUxYmMxYzI2MWZhNjg0NWUyYwAABQEAAAAAHQEAGFRFTFVT
IENvbW11bmljYXRpb25zIEluYwAALgEAKUNvcHlyaWdodCBAIFRFTFVTIENvbW11bmljYXRpb25z
IEluYyAyMDE0AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB8NQAAAAAAAAAAAACW
NQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiDUAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAEwEAAAAAAAAAAAAAEwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsASsAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAUgAZAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAABUAEUATABVAFMAIABDAG8AbQBtAHUAbgBpAGMAYQB0AGkAbwBuAHMAIABJ
AG4AYwAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADgA
MAAzADYAMwA2AGMANQA1ADIAYwAyADQAZgBlADEAYgBjADEAYwAyADYAMQBmAGEANgA4ADQANQBl
ADIAYwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOAAwADMANgAzADYAYwA1ADUAMgBj
ADIANABmAGUAMQBiAGMAMQBjADIANgAxAGYAYQA2ADgANAA1AGUAMgBjAC4AZABsAGwAAAB4ACoA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABU
AEUATABVAFMAIABDAG8AbQBtAHUAbgBpAGMAYQB0AGkAbwBuAHMAIABJAG4AYwAgADIAMAAxADQA
AAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA4ADAAMwA2ADMANgBjADUANQAyAGMA
MgA0AGYAZQAxAGIAYwAxAGMAMgA2ADEAZgBhADYAOAA0ADUAZQAyAGMALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOAAwADMANgAzADYAYwA1ADUAMgBjADIA
NABmAGUAMQBiAGMAMQBjADIANgAxAGYAYQA2ADgANAA1AGUAMgBjAAAANAAIAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACoNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_803636c552c24fe1bc1c261fa6845e2c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Package::EndDate,$Package::StartDate</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">337354601486afa3dd699ed4b8b01d93</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">713503c62293ead76770c6ff6bb8148560fa978a</property>
              </properties>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]"
                      dataType="dbDate"
                      lineageId="Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]"
                      name="CurrentDate" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_DW_DimDate\scr_WeekOfTheMonth"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;9"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="scr_WeekOfTheMonth"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    int _WeekNb = 0;
    short _MonthNb = 0;
    byte _WeekOfTheYear = 0;

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if((Row.MonthOfYear != _MonthNb) && _WeekOfTheYear != Row.WeekOfYear)
        {
            _WeekNb = 1;
            _MonthNb = Row.MonthOfYear;
        }
        if ((Row.WeekOfYear != _WeekOfTheYear) || (_WeekNb == 0))
        {
            _WeekOfTheYear = Row.WeekOfYear;
            _WeekNb += 1;
        }
        Row.WeekOfTheMonth = (byte)_WeekNb;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte MonthOfYear
    {
        get
        {
            return Buffer.GetByte(BufferColumnIndexes[0]);
        }
    }
    public bool MonthOfYear_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte WeekOfYear
    {
        get
        {
            return Buffer.GetByte(BufferColumnIndexes[1]);
        }
    }
    public bool WeekOfYear_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte WeekOfTheMonth
    {
        set
        {
            this[2] = value;
        }
    }
    public bool WeekOfTheMonth_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f7dc53754ad747eda1367e4552097444.Properties.Settings.get_Default():SC_f7dc53754ad747eda1367e4552097444.Properties.Sett" +
    "ings")]

namespace SC_f7dc53754ad747eda1367e4552097444.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f7dc53754ad747eda1367e4552097444.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0017f6a9-31b5-4d3f-964a-d5948db01263}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f7dc53754ad747eda1367e4552097444</RootNamespace>
    <AssemblyName>SC_f7dc53754ad747eda1367e4552097444</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f7dc53754ad747eda1367e4552097444" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_f7dc53754ad747eda1367e4552097444</msb:CodeName>
		<msb:DisplayName>SC_f7dc53754ad747eda1367e4552097444</msb:DisplayName>
		<msb:ProjectId>{87C55354-6306-41E1-8F9A-E7668F2DFD08}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_f7dc53754ad747eda1367e4552097444.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f7dc53754ad747eda1367e4552097444")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f7dc53754ad747eda1367e4552097444")]
[assembly: AssemblyCopyright("Copyright @  2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f7dc53754ad747eda1367e4552097444.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f7dc53754ad747eda1367e4552097444.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f7dc53754ad747eda1367e4552097444.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f7dc53754ad747eda1367e4552097444.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f7dc53754ad747eda1367e4552097444.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f7dc53754ad747eda1367e4552097444.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK/aiFkAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAAfjIA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACwyAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBIAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
MgAAAAAAAEgAAAACAAUAJCIAAFAPAAABAAAAAAAAAHQxAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAwBtAAAAAAAAAANvBAAABgJ7AgAABC4hAnsDAAAEA28G
AAAGLhMCF30BAAAEAgNvBAAABn0CAAAEA28GAAAGAnsDAAAEMwgCewEAAAQtGgIDbwYAAAZ9AwAA
BAICewEAAAQXWH0BAAAEAwJ7AQAABNJvCAAABioeAigMAAAGKioCAwQFKBAAAAoqUgJ7EQAACgJ7
EgAAChaUbxMAAAoqIgIWKBQAAAoqUgJ7EQAACgJ7EgAACheUbxMAAAoqIgIXKBQAAAoqOgIYA4wa
AAABKBUAAAoqWgMsCAIYKBYAAAoqcgEAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cxAAAAZ9BAAABAICcxEAAAZ9BQAABCqSBHKeAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMDAAAGbw4A
AAYqSisHAgNvDwAABgNvCgAABi3xKgYqOgIoHQAACgIDfQYAAAQqOgIoHQAACgIDfQcAAAQqHgIo
HQAACiqufggAAAQtHnKuAABw0AcAAAIoHgAACm8fAAAKcyAAAAqACAAABH4IAAAEKhp+CQAABCoe
AoAJAAAEKhp+CgAABCoeAighAAAKKi5zFwAABoAKAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAAIgFAAAjfgAA9AUAAHwGAAAjU3RyaW5ncwAAAABwDAAAIAEAACNVUwCQDQAA
EAAAACNHVUlEAAAAoA0AALABAAAjQmxvYgAAAAAAAAACAAABVxWgAQkBAAAA+gEzABYAAAEAAAAg
AAAACAAAAAoAAAAYAAAADwAAACEAAAAQAAAAAwAAAAkAAAAKAAAAAQAAAAQAAAABAAAAAAD/AgEA
AAAAAAYA9QGzBAYAiQKzBAYAQQGgBA8AJwUAAAYAbgHHAwYA2AHHAwYAuQHHAwYAcALHAwYAFQLH
AwYALgLHAwYAhQHHAwYAoAG1AgoASQKOAAoAcgSOAA4AYwSOAAoAEASOAAoA7QWOAAYAsAV/AwYA
JAGgBAYAgwTTBAYABASyAxIA9ADpAhIAVQHpAhIA3ACdAwYACQGzBAYAqgJ/AwYA2QN/AwYAzwJ/
AwYA8wN/AwYArwB/AwYAYAB/AwYAcgbHAwAAAAAlAAAAAAABAAEAAQAQAJIDAAAQAAEAAQABABAA
VgQAADkABAADAAEAEADPBQAARQAEAAwAAQAQAKQFAABJAAYAEAABABAAZQUAAEkABwARAAAAEADa
BDYFSQAIABIAAAEQAJQFNgVhAAoAFgABAD8AdQABADYAeAABACgEewAGAKQFfgAGAGUFggABAN0F
hgABAN0FhgARAIYDigARAMwAjgARAFAAkgBQIAAAAADGAE8GlgABAMkgAAAAAIYYkwQGAAIA0SAA
AAAAhhiTBBsAAgDcIAAAAACGCDcEnAAFAPEgAAAAAIYIQQM9AAUA+iAAAAAAhghHBJwABQAPIQAA
AACGCFgDPQAFABghAAAAAIYI1gKgAAUAJyEAAAAAhggnA6UABgA+IQAAAACGAGYGPQAHAEYhAAAA
AIYAtwU9AAcATiEAAAAAhhiTBAYABwBuIQAAAADGAEIGqgAHAJMhAAAAAMYBOwaWAAsApiEAAAAA
xgFPBpYADACoIQAAAACGGJMEtAANALchAAAAAIYYkwS0AA4AxiEAAAAAgxiTBAYADwDOIQAAAACT
CH8EugAPAPohAAAAAJMItAC/AA8AASIAAAAAkwjAAMQADwAJIgAAAACWCMMFygAQABAiAAAAAIYY
kwQGABAAGCIAAAAAkRiZBM8AEAAAAAEAagYAAAEAeAQAAAIAbwUAAAMAHgQAAAEArwIAAAEArwIA
AAEALgAAAAIAhAAAAAMAeAQAAAQAHgQAAAEAeAQAAAEAagYAAAEA8wUAAAEA8wUAAAEArwIJAJME
AQARAJMEBgAZAJMECgApAJMEEAAxAJMEEAA5AJMEEABBAJMEEABJAJMEEABRAJMEEABZAJMEEABh
AJMEEABpAJMEBgCZAJMEBgC5AJMEFQDJAJMEBgBxAJMEGwBxAHgEJQBxAG8FKQB5AKcCLQBxAGcD
MgBxAHYDNwBxAG4DAQDZAJMEEABxAGYGPQBxALcFPQCJAJMEBgDhAJ0FQQCJAIMFSACRAJMEBgDx
AHIATgDxAG4GVQChAJMEWwDBAJMEBgAuAAsA6gAuABMA8wAuABsAEgEuACMAGwEuACsARAEuADMA
RAEuADsARAEuAEMAGwEuAEsASgEuAFMARAEuAFsAYQFDAGMAqQHjAGsAqQHpAHMAEgEJAXMAEgFB
AXsAqQEDAAEABwAHAAgACQAAADsE0wAAAEUD1wAAAEsE0wAAAFwD1wAAANoC0wAAACsD1wAAAIME
2wAAANQA4AAAAMcF5QACAAQAAwACAAUABQACAAYABwACAAcACQABAAgACwABAAkADQACABMADwAC
ABQAEQABABUAEQACABYAEwAEgAAAAQAAAAAAAAAAAAAAAAABAAAABAAAAAAAAAAAAAAAYwBHAAAA
AAANAAAAAAAAAAAAAABsAP0FAAAAAA0AAAAAAAAAAAAAAGwAGgYAAAAABAAAAAAAAAAAAAAAYwB/
AwAAAAAAAAAAAQAAAOQEAAAAAABTQ19mN2RjNTM3NTRhZDc0N2VkYTEzNjdlNDU1MjA5NzQ0NAA8
TW9kdWxlPgBJbnB1dElEAF9Nb250aE5iAF9XZWVrTmIAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291
cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRy
eVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBHZXRCeXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3Ry
aW5nAHNldF9XZWVrT2ZUaGVNb250aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZjdkYzUzNzU0
YWQ3NDdlZGExMzY3ZTQ1NTIwOTc0NDQuZGxsAHNldF9XZWVrT2ZUaGVNb250aF9Jc051bGwAZ2V0
X01vbnRoT2ZZZWFyX0lzTnVsbABnZXRfV2Vla09mWWVhcl9Jc051bGwAU2V0TnVsbABzZXRfSXRl
bQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0
aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAA
X1dlZWtPZlRoZVllYXIAZ2V0X01vbnRoT2ZZZWFyAGdldF9XZWVrT2ZZZWFyAElucHV0MEJ1ZmZl
cgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAu
Y2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMA
U3lzdGVtLlJlc291cmNlcwBTQ19mN2RjNTM3NTRhZDc0N2VkYTEzNjdlNDU1MjA5NzQ0NC5Qcm9w
ZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZjdkYzUzNzU0YWQ3
NDdlZGExMzY3ZTQ1NTIwOTc0NDQuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5k
ZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBPYmplY3QA
RW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2Ny
aXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNl
cnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0
Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQA
eQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBz
AGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4A
cwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AZgA3AGQAYwA1ADMANwA1ADQAYQBk
ADcANAA3AGUAZABhADEAMwA2ADcAZQA0ADUANQAyADAAOQA3ADQANAA0AC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAADWK1BJWcjvTpZrNAsnUAdNAAQgAQEIAyAAAQUg
AQEREQQgAQEOBSABARFZCSADARI9HQgSQQMGEj0DBh0IBCABBQgEIAECCAUgAgEIHAMgAAIGIAIC
DhF1BSABHQgIBgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAgYIAgYGAgYF
AwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIMAyAABQQgAQEFBCABAQIJIAQBCA4SPRJBBSAB
ARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAAUDKAACBAgAElEECAASVQQIABIgCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19mN2RjNTM3
NTRhZDc0N2VkYTEzNjdlNDU1MjA5NzQ0NAAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE0AABH
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5O
RVQgRnJhbWV3b3JrIDQEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFQyAAAAAAAAAAAAAG4yAAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAABgMgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBmADcAZABjADUAMwA3ADUANABhAGQANwA0ADcAZQBkAGEAMQAzADYANwBlADQANQA1
ADIAMAA5ADcANAA0ADQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGYANwBkAGMANQAz
ADcANQA0AGEAZAA3ADQANwBlAGQAYQAxADMANgA3AGUANAA1ADUAMgAwADkANwA0ADQANAAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZgA3
AGQAYwA1ADMANwA1ADQAYQBkADcANAA3AGUAZABhADEAMwA2ADcAZQA0ADUANQAyADAAOQA3ADQA
NAA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYANwBk
AGMANQAzADcANQA0AGEAZAA3ADQANwBlAGQAYQAxADMANgA3AGUANAA1ADUAMgAwADkANwA0ADQA
NAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAgDIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f7dc53754ad747eda1367e4552097444</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">45de386bf2f8f9dd39111b630a0b5faf</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">3116b424792296a1ebc9b978cfea8cbed8ab836a</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Inputs[Input 0].Columns[MonthOfYear]"
                      cachedDataType="ui1"
                      cachedName="MonthOfYear"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[MonthOfYear]" />
                    <inputColumn
                      refId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Inputs[Input 0].Columns[WeekOfYear]"
                      cachedDataType="ui1"
                      cachedName="WeekOfYear"
                      lineageId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output].Columns[WeekOfYear]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Outputs[Output 0].Columns[WeekOfTheMonth]"
                      dataType="ui1"
                      lineageId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Outputs[Output 0].Columns[WeekOfTheMonth]"
                      name="WeekOfTheMonth" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\dft_DW_DimDate.Paths[Copy Column Output]"
              endId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Inputs[Lookup Input]"
              name="Copy Column Output"
              startId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Outputs[Copy Column Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Derived Column Output]"
              endId="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey.Inputs[Copy Column Input]"
              name="Derived Column Output"
              startId="Package\dft_DW_DimDate\der_LoadId.Outputs[Derived Column Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Derived Column Output1]"
              endId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\dft_DW_DimDate\der_CalendarYearMonth.Outputs[Derived Column Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Derived Column Output2]"
              endId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\dft_DW_DimDate\der_DimDateAttributes.Outputs[Derived Column Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Lookup Match Output]"
              endId="Package\dft_DW_DimDate\der_DimDateAttributes.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey.Outputs[Lookup Match Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Lookup Match Output1]"
              endId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup Match Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Lookup No Match Output]"
              endId="Package\dft_DW_DimDate\ole_dst_DW_DimDate.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Lookup No Match Output1]"
              endId="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols.Inputs[OLE DB Command Input]"
              name="Lookup No Match Output"
              startId="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Output 0]"
              endId="Package\dft_DW_DimDate\der_LoadId.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\dft_DW_DimDate\scr_src_CurrDate.Outputs[Output 0]" />
            <path
              refId="Package\dft_DW_DimDate.Paths[Output 01]"
              endId="Package\dft_DW_DimDate\der_CalendarYearMonth.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\dft_DW_DimDate\scr_WeekOfTheMonth.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\dft_Util_DateTextTranslation"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{08DFFA83-2F58-42A4-BA27-46D03A4AB77B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="dft_Util_DateTextTranslation"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\dft_Util_DateTextTranslation\der_LoadId"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="der_LoadId"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dft_Util_DateTextTranslation\der_LoadId.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_LoadId.Inputs[Derived Column Input].Columns[CurrentDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrentDate"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\dft_Util_DateTextTranslation\der_LoadId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Output].Columns[LoadId]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Output].Columns[LoadId]"
                      name="LoadId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">@[$Package::LoadId]</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">@[$Package::LoadId]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Output].Columns[DateKey]"
                      name="DateKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I8)((DT_WSTR,4)[YEAR](#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}) + [RIGHT]("0" + (DT_WSTR,2)[MONTH](#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}),2) + [RIGHT]("0" + (DT_WSTR,2)[DAY](#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}),2))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I8)((DT_WSTR,4)YEAR(CurrentDate) + RIGHT("0" + (DT_WSTR,2)MONTH(CurrentDate),2) + RIGHT("0" + (DT_WSTR,2)DAY(CurrentDate),2))</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\dft_Util_DateTextTranslation\der_LoadId.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="der_MonthNumber_DayNumberOfTheWeek"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Inputs[Derived Column Input].Columns[CurrentDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrentDate"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[MonthNumber]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[MonthNumber]"
                      name="MonthNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("m",#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("m",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DayNumberOfTheWeek]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DayNumberOfTheWeek]"
                      name="DayNumberOfTheWeek"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("dw",#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("dw",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DayOfMonth]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DayOfMonth]"
                      name="DayOfMonth"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("d",#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("d",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[CalendayYear]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[CalendayYear]"
                      name="CalendayYear"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("yyyy",#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("yyyy",CurrentDate)</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DateTextTranslationKey]"
                      dataType="i8"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DateTextTranslationKey]"
                      name="DateTextTranslationKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_I8)((DT_WSTR,4)[YEAR](#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}) + [RIGHT]("0" + (DT_WSTR,2)[MONTH](#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}),2) + [RIGHT]("0" + (DT_WSTR,2)[DAY](#{Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]}),2))</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_I8)((DT_WSTR,4)YEAR(CurrentDate) + RIGHT("0" + (DT_WSTR,2)MONTH(CurrentDate),2) + RIGHT("0" + (DT_WSTR,2)DAY(CurrentDate),2))</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="ole_dst_Util_DateTextTranslation"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[Util].[DateTextTranslation]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">true</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Connections[OleDbConnection]"
                  connectionManagerID="{25BA1AB6-6CD3-4756-B825-F73689CC7A27}:external"
                  connectionManagerRefId="Project.ConnectionManagers[cmgr_DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].Columns[LanguageCode]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="3"
                      cachedName="LanguageCode"
                      externalMetadataColumnId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[LanguageCode]"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageCode]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].Columns[LanguageName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="LanguageName"
                      externalMetadataColumnId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[LanguageName]"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageName]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].Columns[DateTextTranslationKey]"
                      cachedDataType="i8"
                      cachedName="DateTextTranslationKey"
                      externalMetadataColumnId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[DateTextTranslationKey]"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DateTextTranslationKey]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].Columns[MonthName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="15"
                      cachedName="MonthName"
                      externalMetadataColumnId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[MonthName]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].Columns[DateName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="DateName"
                      externalMetadataColumnId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[DateName]"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[DateName]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].Columns[LoadId]"
                      cachedDataType="i4"
                      cachedName="LoadId"
                      externalMetadataColumnId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[LoadId]"
                      lineageId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Output].Columns[LoadId]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].Columns[HolidayText]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="HolidayText"
                      externalMetadataColumnId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[HolidayText]"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[HolidayText]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[DateTextTranslationKey]"
                      dataType="i8"
                      name="DateTextTranslationKey" />
                    <externalMetadataColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[MonthName]"
                      codePage="1252"
                      dataType="str"
                      length="15"
                      name="MonthName" />
                    <externalMetadataColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[DateName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="DateName" />
                    <externalMetadataColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[LanguageCode]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      name="LanguageCode" />
                    <externalMetadataColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[LanguageName]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      name="LanguageName" />
                    <externalMetadataColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[HolidayText]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="HolidayText" />
                    <externalMetadataColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input].ExternalColumns[LoadId]"
                      dataType="i4"
                      name="LoadId" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="scr_DateName_DayName_MonthName"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9ebe9d461aef4464bda3836688282298.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2e8d99f1-2555-4355-8911-37754899d805}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_9ebe9d461aef4464bda3836688282298</RootNamespace>
    <AssemblyName>SC_9ebe9d461aef4464bda3836688282298</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_9ebe9d461aef4464bda3836688282298" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    string _NACode = string.Empty;

    public override void PreExecute()
    {
        base.PreExecute();
        _NACode = this.Variables.NACode;
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string _DayName = GetDayName(Row.LanguageCode, Row.DayNumberOfTheWeek);
        string _MonthName = GetMonthName(Row.LanguageCode, Row.MonthNumber);

        Row.DayNameOfWeek = _DayName;
        Row.MonthName = _MonthName;
                
        Row.DateName = GetDateName(Row.LanguageCode, Row.CalendayYear, Row.DayOfMonth, _DayName, _MonthName);

        Row.HolidayText = GetHolidayText(Row.LanguageCode, Row.MonthNumber, Row.CalendayYear, Row.DayNumberOfTheWeek, Row.DayOfMonth, _DayName);
    }

    string GetDayName(string LanguageCode, int _DayNumberOfTheWeek)
    {
        string _DayName = string.Empty;


        if (LanguageCode.ToUpper().Trim() == "EN")
        {
            switch (_DayNumberOfTheWeek)
            {
                case 1: _DayName = "Sunday";
                    break;
                case 2: _DayName = "Monday";
                    break;
                case 3: _DayName = "Tuesday";
                    break;
                case 4: _DayName = "Wednesday";
                    break;
                case 5: _DayName = "Thursday";
                    break;
                case 6: _DayName = "Friday";
                    break;
                case 7: _DayName = "Saturday";
                    break;
            }
        }

        if (LanguageCode.ToUpper().Trim() == "FR")
        {
            switch (_DayNumberOfTheWeek)
            {
                case 1: _DayName = "Dimanche";
                    break;
                case 2: _DayName = "Lundi";
                    break;
                case 3: _DayName = "Mardi";
                    break;
                case 4: _DayName = "Mercredi";
                    break;
                case 5: _DayName = "Jeudi";
                    break;
                case 6: _DayName = "Vendredi";
                    break;
                case 7: _DayName = "Samedi";
                    break;
            }
        }
        return _DayName;

    }

    string GetMonthName(string LanguageCode, int _MonthNumber)
    {
        string _MonthName = string.Empty;


        if (LanguageCode.ToUpper().Trim() == "EN")
        {
            switch (_MonthNumber)
            {
                case 1: _MonthName = "January";
                    break;
                case 2: _MonthName = "February";
                    break;
                case 3: _MonthName = "March";
                    break;
                case 4: _MonthName = "April";
                    break;
                case 5: _MonthName = "May";
                    break;
                case 6: _MonthName = "June";
                    break;
                case 7: _MonthName = "July";
                    break;
                case 8: _MonthName = "August";
                    break;
                case 9: _MonthName = "September";
                    break;
                case 10: _MonthName = "October";
                    break;
                case 11: _MonthName = "November";
                    break;
                case 12: _MonthName = "December";
                    break;
            }
        }

        if (LanguageCode.ToUpper().Trim() == "FR")
        {
            switch (_MonthNumber)
            {
                case 1: _MonthName = "Janvier";
                    break;
                case 2: _MonthName = "Février";
                    break;
                case 3: _MonthName = "Mars";
                    break;
                case 4: _MonthName = "Avril";
                    break;
                case 5: _MonthName = "Mai";
                    break;
                case 6: _MonthName = "Juin";
                    break;
                case 7: _MonthName = "Juillet";
                    break;
                case 8: _MonthName = "Aout";
                    break;
                case 9: _MonthName = "Septembre";
                    break;
                case 10: _MonthName = "Octobre";
                    break;
                case 11: _MonthName = "Novembre";
                    break;
                case 12: _MonthName = "Decembre";
                    break;
            }
        }
        return _MonthName;

    }

    string GetDateName(string _LanguageCode, int _Year, int _DayOfMonth, string _DayName, string _MonthName)
    {
        string _DateName = string.Empty;

        if (_LanguageCode.ToUpper().Trim() == "EN")
        {
            _DateName = _DayName + " " + _MonthName + " " + _DayOfMonth.ToString() +  ", " + _Year.ToString();
        }

        if (_LanguageCode.ToUpper().Trim() == "FR")
        {
            _DateName = _DayName + " le " + _DayOfMonth.ToString() + " " + _MonthName + " " + _Year.ToString();
        }

        return _DateName;
    }

    string GetHolidayText(string _LanguageCode, int _MonthNumber, int _Year, int _DayNumberOfTheWeek, int _DayOfMonth, string _DayName)
    {
        string _HolidayText = _NACode;

        if (_LanguageCode.ToUpper().Trim() == "EN")
        {
            if ((_MonthNumber == 11) && (_DayOfMonth == 4) && (_DayName.ToUpper() == "THURSDAY"))
            {
                _HolidayText = "Thanksgiving Day";
            }

            if((_MonthNumber == 12) && (_DayOfMonth == 25))
            {
            _HolidayText = "Christmas";
            }

        }
        if (_LanguageCode.ToUpper().Trim() == "FR")
        {
            if ((_MonthNumber == 11) && (_DayOfMonth == 4) && (_DayName.ToUpper() == "THURSDAY"))
            {
                _HolidayText = "Jour de la Thanksgiving (US)";
            }
            if ((_MonthNumber == 12) && (_DayOfMonth == 25))
            {
                _HolidayText = "Noel";
            }
        }

        

        return _HolidayText;
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime CurrentDate
    {
        get
        {
            return Buffer.GetDate(BufferColumnIndexes[0]);
        }
    }
    public bool CurrentDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String LanguageCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool LanguageCode_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String LanguageName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool LanguageName_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Int32 MonthNumber
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[3]);
        }
    }
    public bool MonthNumber_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Int32 DayNumberOfTheWeek
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[4]);
        }
    }
    public bool DayNumberOfTheWeek_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Int32 DayOfMonth
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[5]);
        }
    }
    public bool DayOfMonth_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Int32 CalendayYear
    {
        get
        {
            return Buffer.GetInt32(BufferColumnIndexes[6]);
        }
    }
    public bool CalendayYear_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String DayNameOfWeek
    {
        set
        {
            this[7] = value;
        }
    }
    public bool DayNameOfWeek_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthName
    {
        set
        {
            this[8] = value;
        }
    }
    public bool MonthName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DateName
    {
        set
        {
            this[9] = value;
        }
    }
    public bool DateName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String HolidayText
    {
        set
        {
            this[10] = value;
        }
    }
    public bool HolidayText_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9ebe9d461aef4464bda3836688282298.Properties.Settings.get_Default():SC_9ebe9d461aef4464bda3836688282298.Properties.Sett" +
    "ings")]

namespace SC_9ebe9d461aef4464bda3836688282298.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String NACode
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["NACode"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_9ebe9d461aef4464bda3836688282298</msb:CodeName>
		<msb:DisplayName>SC_9ebe9d461aef4464bda3836688282298</msb:DisplayName>
		<msb:ProjectId>{50C9EACA-415F-4004-A418-3F70CB5181B0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_9ebe9d461aef4464bda3836688282298.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_9ebe9d461aef4464bda3836688282298")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TELUS Communications Inc")]
[assembly: AssemblyProduct("SC_9ebe9d461aef4464bda3836688282298")]
[assembly: AssemblyCopyright("Copyright @ TELUS Communications Inc 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9ebe9d461aef4464bda3836688282298.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9ebe9d461aef4464bda3836688282298.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_9ebe9d461aef4464bda3836688282298.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_9ebe9d461aef4464bda3836688282298.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_9ebe9d461aef4464bda3836688282298.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9ebe9d461aef4464bda3836688282298.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALHaiFkAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAA0kAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAIBAAABPAAAAAGAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA2CAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAC0
QAAAAAAAAEgAAAACAAUAZCcAAGQYAAABAAAAAAAAAMg/AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAGICKBAAAAoCAnsDAAAEbycAAAZ9AQAABCoAAAATMAgAgAAA
AAEAABECA28LAAAGA28RAAAGKAMAAAYKAgNvCwAABgNvDwAABigEAAAGCwMGbxcAAAYDB28ZAAAG
AwIDbwsAAAYDbxUAAAYDbxMAAAYGBygFAAAGbxsAAAYDAgNvCwAABgNvDwAABgNvFQAABgNvEQAA
BgNvEwAABgYoBgAABm8dAAAGKhMwAgDuAAAAAgAAEX4RAAAKCgNvEgAACm8TAAAKcgEAAHAoFAAA
CixcBBdZRQcAAAACAAAACgAAABIAAAAaAAAAIgAAACoAAAAyAAAAKzZyBwAAcAorLnIVAABwCism
ciMAAHAKKx5yMwAAcAorFnJHAABwCisOclkAAHAKKwZyZwAAcAoDbxIAAApvEwAACnJ5AABwKBQA
AAosXAQXWUUHAAAAAgAAAAoAAAASAAAAGgAAACIAAAAqAAAAMgAAACs2cn8AAHAKKy5ykQAAcAor
JnKdAABwCisecqkAAHAKKxZyuwAAcAorDnLHAABwCisGctkAAHAKBioAABMwAgBsAQAAAgAAEX4R
AAAKCgNvEgAACm8TAAAKcgEAAHAoFAAACjmYAAAABBdZRQwAAAACAAAACgAAABIAAAAaAAAAIgAA
ACoAAAAyAAAAOgAAAEIAAABKAAAAUgAAAFoAAAArXnLnAABwCitWcvcAAHAKK05yCQEAcAorRnIV
AQBwCis+ciEBAHAKKzZyKQEAcAorLnIzAQBwCismcj0BAHAKKx5ySwEAcAorFnJfAQBwCisOcm8B
AHAKKwZygQEAcAoDbxIAAApvEwAACnJ5AABwKBQAAAo5mAAAAAQXWUUMAAAAAgAAAAoAAAASAAAA
GgAAACIAAAAqAAAAMgAAADoAAABCAAAASgAAAFIAAABaAAAAK15ykwEAcAorVnKjAQBwCitOcrMB
AHAKK0ZyvQEAcAorPnLJAQBwCis2ctEBAHAKKy5y2wEAcAorJnLrAQBwCisecvUBAHAKKxZyCQIA
cAorDnIZAgBwCisGcisCAHAKBioTMAQAugAAAAIAABF+EQAACgoDbxIAAApvEwAACnIBAABwKBQA
AAosQh2NGwAAASUWDgSiJRdyPQIAcKIlGA4FoiUZcj0CAHCiJRoPAygVAAAKoiUbckECAHCiJRwP
AigVAAAKoigWAAAKCgNvEgAACm8TAAAKcnkAAHAoFAAACixCHY0bAAABJRYOBKIlF3JHAgBwoiUY
DwMoFQAACqIlGXI9AgBwoiUaDgWiJRtyPQIAcKIlHA8CKBUAAAqiKBYAAAoKBioAABMwAgCfAAAA
AgAAEQJ7AQAABAoDbxIAAApvEwAACnIBAABwKBQAAAosNAQfCzMeDgUaMxkOBm8SAAAKclECAHAo
FAAACiwGcmMCAHAKBB8MMwwOBR8ZMwZyhQIAcAoDbxIAAApvEwAACnJ5AABwKBQAAAosNAQfCzMe
DgUaMxkOBm8SAAAKclECAHAoFAAACiwGcpkCAHAKBB8MMwwOBR8ZMwZy0wIAcAoGKkoCfhEAAAp9
AQAABAIoIQAABioqAgMEBSgXAAAKKlICexgAAAoCexkAAAoWlG8aAAAKKiICFigbAAAKKlICexgA
AAoCexkAAAoXlG8cAAAKKiICFygbAAAKKlICexgAAAoCexkAAAoYlG8cAAAKKiICGCgbAAAKKlIC
exgAAAoCexkAAAoZlG8dAAAKKiICGSgbAAAKKlICexgAAAoCexkAAAoalG8dAAAKKiICGigbAAAK
KlICexgAAAoCexkAAAoblG8dAAAKKiICGygbAAAKKlICexgAAAoCexkAAAoclG8dAAAKKiICHCgb
AAAKKiYCHQMoHgAACipaAywIAh0oHwAACipy3QIAcHMgAAAKeiYCHgMoHgAACipaAywIAh4oHwAA
Cipy3QIAcHMgAAAKeioCHwkDKB4AAAoqXgMsCQIfCSgfAAAKKnLdAgBwcyAAAAp6KgIfCgMoHgAA
CipeAywJAh8KKB8AAAoqct0CAHBzIAAACnoeAighAAAKKh4CKCIAAAoqfgIoIwAACgICcyUAAAZ9
AgAABAICcyYAAAZ9AwAABCqSBHJ6AwBwGm8kAAAKLBUCBQIDKCUAAAoOBHMIAAAGbyMAAAYqSisH
AgNvJAAABgNvHwAABi3xKgYqOgIoJgAACgIDfQQAAAQqOgIoJgAACgIDfQUAAAQqlgJ7BQAABG8n
AAAKcooDAHBvKAAACigpAAAKbyoAAAp0GwAAASoeAigmAAAKKq5+BgAABC0ecpgDAHDQBwAAAigr
AAAKbywAAApzLQAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKC4AAAoqLnMt
AAAGgAgAAAQqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIgIAAAjfgAA9AgA
ABQJAAAjU3RyaW5ncwAAAAAIEgAADAQAACNVUwAUFgAAEAAAACNHVUlEAAAAJBYAAEACAAAjQmxv
YgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAlAAAACAAAAAgAAAAuAAAAJAAAAC4AAAAQ
AAAAAgAAAAQAAAAaAAAAGwAAAAEAAAAFAAAAAQAAAAAA+gMBAAAAAAAGALwCxAYGAFADxAYGAAgC
sQYPADgHAAAGADUCjAUGAJ8CjAUGAIACjAUGADcDjAUGANwCjAUGAPUCjAUGAEwCjAUGAGcCfwMK
ABADPQEKAFMGPQEOAEQGPQEKANUFPQEGADQBPwUKABEIPQEGANQHPwUGAOsBsQYGAGQG5AYGAMkF
dwUSALsB5AMSABwC5AMSAIsBYgUGANABxAYGAKUDPwUGAD0APwUGAJ4FPwUGALgFPwUWABEAfAYW
AAEAfAZLAKYIAAAWACIAfAYGAF4BPwUGAK0APwUGAPkIjAUAAAAAZwAAAAAAAQABAAEAEABXBQAA
EAABAAEAAQAQADcGAAA5AAIACAABABAA8wcAAEkAAgAhAAEAEADBBwAATQAEACUAAQAQAIIHAABN
AAUAJgAAABAA6wZHB00ABgAoAAABEACxB0cHZQAIACwAAQCUACQABgDBB7cABgCCB7sAAQABCL8A
AQABCL8AEQBLBcMAEQB7AccAEQCBAMsAUCAAAAAAxgBuAwYAAQBsIAAAAADGANYIzwABAPggAAAA
AIEAKQHVAAIA9CEAAAAAgQAJAdUABABsIwAAAACBAO8A2wAGADQkAAAAAIEAgwjkAAsA3yQAAAAA
hhikBgYAEQDyJAAAAACGGKQGNwARAP0kAAAAAIYIqwHuABQAEiUAAAAAhgh7BGQAFAAbJQAAAACG
CJwAJwAUADAlAAAAAIYIIgRkABQAOSUAAAAAhgjRACcAFABOJQAAAACGCDoEZAAUAFclAAAAAIYI
JwbzABQAbCUAAAAAhgj3BGQAFAB1JQAAAACGCLsD8wAUAIolAAAAAIYIqARkABQAkyUAAAAAhgis
A/MAFACoJQAAAACGCJIEZAAUALElAAAAAIYIFgbzABQAxiUAAAAAhgjfBGQAFADPJQAAAACGCNID
EAAUANklAAAAAIYIxgT3ABUA8CUAAAAAhgj7ABAAFgD6JQAAAACGCGYE9wAXABEmAAAAAIYI4gAQ
ABgAHCYAAAAAhghSBPcAGQA0JgAAAACGCHMIEAAaAD8mAAAAAIYIDgX3ABsAVyYAAAAAhgDtCGQA
HABfJgAAAACGANsHZAAcAGcmAAAAAIYYpAYGABwAhyYAAAAAxgBmCPwAHACsJgAAAADGAV8IzwAg
AL8mAAAAAMYB1gjPACEAwSYAAAAAhhikBgYBIgDQJgAAAACGGKQGBgEjAN8mAAAAAIYIkQAnACQA
BScAAAAAgxikBgYAJAANJwAAAACTCGAGDAEkADknAAAAAJMIYwERASQAQCcAAAAAkwhvARYBJABI
JwAAAACWCOcHHAElAE8nAAAAAIYYpAYGACUAVycAAAAAkRiqBiEBJQAAAAEA8QgAAAEAoAAAAAIA
vgMAAAEAoAAAAAIAKgYAAAEAnwAAAAIAEAYAAAMArwMAAAQAIAEAAAUA/gAAAAEAnwAAAAIAKgYA
AAMAEAYAAAQAvgMAAAUArwMAAAYAIAEAAAEAWQYAAAIAjAcAAAMA4wUAAAEAeQMAAAEAeQMAAAEA
eQMAAAEAeQMAAAEAeQMAAAEAeQMAAAEAeQMAAAEAeQMAAAEAcAAAAAIAFgEAAAMAWQYAAAQA4wUA
AAEAWQYAAAEA8QgAAAEAFwgAAAEAFwgAAAEAeQMJAKQGAQARAKQGBgAZAKQGCgApAKQGEAAxAKQG
EAA5AKQGEABBAKQGEABJAKQGEABRAKQGEABZAKQGEABhAKQGEABpAKQGBgChAKQGBgDBAKQGFQDR
AKQGBgCRAG4DBgDZAA4JJADZAHQGJwDZAEYFJwDZAAIJKwDhAJkDJwDZAM0HMQBxAKQGNwBxAFkG
QQBxAIwHRQB5AKMBSQBxAB4FTwB5AKIDVAB5ADoAWQBxADYFXgBxACUFAQDpAKQGEABxAO0IZABx
ANsHZACRAKQGBgDZALoHaACRAKAHbwCZAKQGBgCRAHYHdQD5AC0FegCRAMEIgQABAZIIhwAZAb8A
jgAZAfUIlwCpAKQGnQDJAKQGBgAuAAsARQEuABMATgEuABsAbQEuACMAdgEuACsAnwEuADMAnwEu
ADsApQEuAEMAdgEuAEsAwwEuAFMAnwEuAFsA8gFDAGMAOgLjAGsAOgIBAXsAOgIJA3MAbQEpA3MA
bQEbACAAAwABAAYAFwAHABgACAAaAAAArwElAQAAfwQqAQAAoAAuAQAAJgQqAQAA1QAuAQAAPgQq
AQAAKwYyAQAA+wQqAQAAvwMyAQAArAQqAQAAsAMyAQAAlgQqAQAAGgYyAQAA4wQqAQAA1gMuAQAA
ygQqAQAADAEuAQAAagQqAQAA8gAuAQAAVgQqAQAAhgguAQAAEgUqAQAAlQAuAQAAZAY2AQAAgwE7
AQAA6wdAAQIACQADAAIACgAFAAIACwAHAAIADAAJAAIADQALAAIADgANAAIADwAPAAIAEAARAAIA
EQATAAIAEgAVAAIAEwAXAAIAFAAZAAIAFQAbAAIAFgAdAAEAFwAfAAEAGAAhAAEAGQAjAAEAGgAl
AAEAGwAnAAEAHAApAAEAHQArAAEAHgAtAAIAJwAvAAIAKQAxAAIAKgAzAAEAKwAzAAIALAA1AASA
AAABAAAAAAAAAAAAAAAAAEMAAAAEAAAAAAAAAAAAAAClAHgAAAAAAA0AAAAAAAAAAAAAAK4AIQgA
AAAADQAAAAAAAAAAAAAArgA+CAAAAAAEAAAAAAAAAAAAAAClAD8FAAAAAA0AAAAAAAAAAAAAAK4A
7QUAAAAAAAAAAAEAAAD1BgAAAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJ
RFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRJbnQzMgBTQ185ZWJlOWQ0NjFhZWY0NDY0YmRhMzgz
NjY4ODI4MjI5OAA8TW9kdWxlPgBJbnB1dElEAG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBnZXRf
TkFDb2RlAGdldF9MYW5ndWFnZUNvZGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5k
bGUAZ2V0X0xhbmd1YWdlTmFtZQBzZXRfRGF0ZU5hbWUAR2V0RGF0ZU5hbWUAc2V0X01vbnRoTmFt
ZQBHZXRNb250aE5hbWUASW5wdXROYW1lAF9EYXlOYW1lAEdldERheU5hbWUARGF0ZVRpbWUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAR2V0RGF0ZQBnZXRfQ3Vy
cmVudERhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQB2
YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAEdldFN0cmluZwBnZXRfRGF5
T2ZNb250aABnZXRfRGF5TnVtYmVyT2ZUaGVXZWVrAHNldF9EYXlOYW1lT2ZXZWVrAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTQ185ZWJlOWQ0NjFhZWY0NDY0YmRhMzgzNjY4ODI4MjI5OC5kbGwAZ2V0
X0xhbmd1YWdlQ29kZV9Jc051bGwAZ2V0X0xhbmd1YWdlTmFtZV9Jc051bGwAc2V0X0RhdGVOYW1l
X0lzTnVsbABzZXRfTW9udGhOYW1lX0lzTnVsbABnZXRfQ3VycmVudERhdGVfSXNOdWxsAGdldF9E
YXlPZk1vbnRoX0lzTnVsbABnZXRfRGF5TnVtYmVyT2ZUaGVXZWVrX0lzTnVsbABzZXRfRGF5TmFt
ZU9mV2Vla19Jc051bGwAZ2V0X0NhbGVuZGF5WWVhcl9Jc051bGwAZ2V0X01vbnRoTnVtYmVyX0lz
TnVsbABzZXRfSG9saWRheVRleHRfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lz
dGVtAFRyaW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0
aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABfWWVhcgBnZXRfQ2FsZW5kYXlZZWFy
AGdldF9Nb250aE51bWJlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVy
AGdldF9SZXNvdXJjZU1hbmFnZXIAVG9VcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lLldyYXBwZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfOWViZTlkNDYxYWVmNDQ2NGJk
YTM4MzY2ODgyODIyOTguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAFNDXzllYmU5ZDQ2MWFlZjQ0NjRiZGEzODM2Njg4MjgyMjk4LlByb3BlcnRpZXMAZ2V0X1Jl
YWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0
aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABFbmRPZlJvd3NldABnZXRfRGVm
YXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9z
b2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJ
bnB1dDBfUHJvY2Vzc0lucHV0AHNldF9Ib2xpZGF5VGV4dABHZXRIb2xpZGF5VGV4dABHZXRWYWx1
ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250
ZXh0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAb3BfRXF1YWxp
dHkARW1wdHkAAAVFAE4AAA1TAHUAbgBkAGEAeQAADU0AbwBuAGQAYQB5AAAPVAB1AGUAcwBkAGEA
eQAAE1cAZQBkAG4AZQBzAGQAYQB5AAARVABoAHUAcgBzAGQAYQB5AAANRgByAGkAZABhAHkAABFT
AGEAdAB1AHIAZABhAHkAAAVGAFIAABFEAGkAbQBhAG4AYwBoAGUAAAtMAHUAbgBkAGkAAAtNAGEA
cgBkAGkAABFNAGUAcgBjAHIAZQBkAGkAAAtKAGUAdQBkAGkAABFWAGUAbgBkAHIAZQBkAGkAAA1T
AGEAbQBlAGQAaQAAD0oAYQBuAHUAYQByAHkAABFGAGUAYgByAHUAYQByAHkAAAtNAGEAcgBjAGgA
AAtBAHAAcgBpAGwAAAdNAGEAeQAACUoAdQBuAGUAAAlKAHUAbAB5AAANQQB1AGcAdQBzAHQAABNT
AGUAcAB0AGUAbQBiAGUAcgAAD08AYwB0AG8AYgBlAHIAABFOAG8AdgBlAG0AYgBlAHIAABFEAGUA
YwBlAG0AYgBlAHIAAA9KAGEAbgB2AGkAZQByAAAPRgDpAHYAcgBpAGUAcgABCU0AYQByAHMAAAtB
AHYAcgBpAGwAAAdNAGEAaQAACUoAdQBpAG4AAA9KAHUAaQBsAGwAZQB0AAAJQQBvAHUAdAAAE1MA
ZQBwAHQAZQBtAGIAcgBlAAAPTwBjAHQAbwBiAHIAZQAAEU4AbwB2AGUAbQBiAHIAZQAAEUQAZQBj
AGUAbQBiAHIAZQAAAyAAAAUsACAAAAkgAGwAZQAgAAARVABIAFUAUgBTAEQAQQBZAAAhVABoAGEA
bgBrAHMAZwBpAHYAaQBuAGcAIABEAGEAeQAAE0MAaAByAGkAcwB0AG0AYQBzAAA5SgBvAHUAcgAg
AGQAZQAgAGwAYQAgAFQAaABhAG4AawBzAGcAaQB2AGkAbgBnACAAKABVAFMAKQAACU4AbwBlAGwA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAA
MAAADU4AQQBDAG8AZABlAABxUwBDAF8AOQBlAGIAZQA5AGQANAA2ADEAYQBlAGYANAA0ADYANABi
AGQAYQAzADgAMwA2ADYAOAA4ADIAOAAyADIAOQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAAAAB20MNfQxYtJg411nJ2cK90ABCABAQgDIAABBSABARERBCABAQ4F
IAEBEV0EBwIODgMHAQ4CBg4DIAAOBQACAg4OBQABDh0OCSADARI9HQgSQQMGEj0DBh0IBSABEUUI
BCABAggEIAEOCAQgAQgIBSACAQgcAyAAAgYgAgIOEXkFIAEdCAgEIAASfQYgARKAgRwFAAASgIUG
IAEcEoCJCAABEoCNEYCRBSAAEoCVByACAQ4SgJUIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMG
EkkDBhJVAwYSWQMGEiAFIAEBEgwFIAIODggIIAUODggIDg4JIAYODggICAgOBCAAEUUDIAAIBCAB
AQIJIAQBCA4SPRJBBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQQoABFFAygAAgMoAA4D
KAAIBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dz
AQgBAAIAAAAAACgBACNTQ185ZWJlOWQ0NjFhZWY0NDY0YmRhMzgzNjY4ODI4MjI5OAAABQEAAAAA
HQEAGFRFTFVTIENvbW11bmljYXRpb25zIEluYwAALgEAKUNvcHlyaWdodCBAIFRFTFVTIENvbW11
bmljYXRpb25zIEluYyAyMDE0AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZy
YW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAAAC0AAAAzsrvvgEAAACRAAAA
bFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4w
LjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0
ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAqEAA
AAAAAAAAAAAAwkAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALRAAAAAAAAAAAAAAAAAX0NvckRs
bE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
AEwEAAAAAAAAAAAAAEwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sASsAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAUgAZAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAABUAEUATABVAFMAIABDAG8AbQBtAHUAbgBpAGMAYQB0AGkAbwBuAHMAIABJAG4AYwAA
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADkAZQBiAGUA
OQBkADQANgAxAGEAZQBmADQANAA2ADQAYgBkAGEAMwA4ADMANgA2ADgAOAAyADgAMgAyADkAOAAA
ADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkA
bgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOQBlAGIAZQA5AGQANAA2ADEAYQBlAGYANAA0
ADYANABiAGQAYQAzADgAMwA2ADYAOAA4ADIAOAAyADIAOQA4AC4AZABsAGwAAAB4ACoAAQBMAGUA
ZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABUAEUATABV
AFMAIABDAG8AbQBtAHUAbgBpAGMAYQB0AGkAbwBuAHMAIABJAG4AYwAgADIAMAAxADQAAAAqAAEA
AQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBu
AGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA5AGUAYgBlADkAZAA0ADYAMQBhAGUAZgA0ADQA
NgA0AGIAZABhADMAOAAzADYANgA4ADgAMgA4ADIAMgA5ADgALgBkAGwAbAAAAGgAJAABAFAAcgBv
AGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOQBlAGIAZQA5AGQANAA2ADEAYQBlAGYANAA0ADYA
NABiAGQAYQAzADgAMwA2ADYAOAA4ADIAOAAyADIAOQA4AAAANAAIAAEAUAByAG8AZAB1AGMAdABW
AGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADUMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_9ebe9d461aef4464bda3836688282298</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Project::NACode</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">f6784847306d8739e9095cb41000bb62</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">7f4d64ddae38135444ee6a29efbecc29446091a0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0].Columns[CurrentDate]"
                      cachedDataType="dbDate"
                      cachedName="CurrentDate"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0].Columns[LanguageCode]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="3"
                      cachedName="LanguageCode"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageCode]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0].Columns[LanguageName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="LanguageName"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageName]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0].Columns[MonthNumber]"
                      cachedDataType="i4"
                      cachedName="MonthNumber"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[MonthNumber]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0].Columns[DayNumberOfTheWeek]"
                      cachedDataType="i4"
                      cachedName="DayNumberOfTheWeek"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DayNumberOfTheWeek]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0].Columns[DayOfMonth]"
                      cachedDataType="i4"
                      cachedName="DayOfMonth"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[DayOfMonth]" />
                    <inputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0].Columns[CalendayYear]"
                      cachedDataType="i4"
                      cachedName="CalendayYear"
                      lineageId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output].Columns[CalendayYear]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[DayNameOfWeek]"
                      codePage="1252"
                      dataType="str"
                      length="20"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[DayNameOfWeek]"
                      name="DayNameOfWeek" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[MonthName]"
                      codePage="1252"
                      dataType="str"
                      length="15"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[MonthName]"
                      name="MonthName" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[DateName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[DateName]"
                      name="DateName" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[HolidayText]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0].Columns[HolidayText]"
                      name="HolidayText" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="scr_src_CurrDate"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public DateTime EndDate
    {
        get
        {
            return (DateTime)(ParentComponent.ReadOnlyVariables["EndDate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public DateTime StartDate
    {
        get
        {
            return (DateTime)(ParentComponent.ReadOnlyVariables["StartDate"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    DateTime _Date;
    DateTime _EndDate;
    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        _Date = this.Variables.StartDate;
        _EndDate = this.Variables.EndDate;
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        while (_Date < _EndDate)
        {
            Output0Buffer.AddRow();
            Output0Buffer.CurrentDate = _Date;
            Output0Buffer.LanguageCode = "en";
            Output0Buffer.LanguageName = "English";

            Output0Buffer.AddRow();
            Output0Buffer.CurrentDate = _Date;
            Output0Buffer.LanguageCode = "fr";
            Output0Buffer.LanguageName = "French";

            _Date = _Date.AddDays(1);
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime CurrentDate
    {
        set
        {
            this[0] = value;
        }
    }
    public bool CurrentDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LanguageCode
    {
        set
        {
            this[1] = value;
        }
    }
    public bool LanguageCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String LanguageName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool LanguageName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Settings.get_Default():SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Sett" +
    "ings")]

namespace SC_803636c552c24fe1bc1c261fa6845e2c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_803636c552c24fe1bc1c261fa6845e2c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{5b171c41-3456-410b-b06c-39f45c70f869}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_803636c552c24fe1bc1c261fa6845e2c</RootNamespace><AssemblyName>SC_B7730926449E4ADF8ED10F3133A15467</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_803636c552c24fe1bc1c261fa6845e2c" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC130</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_803636c552c24fe1bc1c261fa6845e2c</msb:CodeName>
		<msb:DisplayName>SC_803636c552c24fe1bc1c261fa6845e2c</msb:DisplayName>
		<msb:ProjectId>{7CE92E98-42DA-4B8E-8C4C-1B89C08DA0A3}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_803636c552c24fe1bc1c261fa6845e2c.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_803636c552c24fe1bc1c261fa6845e2c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("TELUS Communications Inc")]
[assembly: AssemblyProduct("SC_803636c552c24fe1bc1c261fa6845e2c")]
[assembly: AssemblyCopyright("Copyright @ TELUS Communications Inc 2014")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_803636c552c24fe1bc1c261fa6845e2c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_803636c552c24fe1bc1c261fa6845e2c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_B7730926449E4ADF8ED10F3133A15467.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALLaiFkAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAA9jUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKQ1AABPAAAAAEAAAKgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA/BUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAKgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADY
NQAAAAAAAEgAAAACAAUAMCMAALwRAAABAAAAAAAAAOw0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKYCKBAAAAoCAnsEAAAEbxcAAAZ9AQAABAICewQAAARvFgAA
Bn0CAAAEKh4CKBEAAAoqAAATMAMArgAAAAAAAAA4kgAAAAJ7BQAABG8MAAAGAnsFAAAEAnsBAAAE
bwYAAAYCewUAAARyAQAAcG8IAAAGAnsFAAAEcgcAAHBvCgAABgJ7BQAABG8MAAAGAnsFAAAEAnsB
AAAEbwYAAAYCewUAAARyFwAAcG8IAAAGAnsFAAAEch0AAHBvCgAABgICfAEAAAQjAAAAAAAA8D8o
EgAACn0BAAAEAnsBAAAEAnsCAAAEKBMAAAo6WP///yoeAigPAAAGKioCAwQFKBQAAAoqOgIWA4wO
AAABKBUAAAoqWgMsCAIWKBYAAAoqcisAAHBzFwAACnomAhcDKBUAAAoqWgMsCAIXKBYAAAoqcisA
AHBzFwAACnomAhgDKBUAAAoqWgMsCAIYKBYAAAoqcisAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoq
HgIoGgAACip+AigbAAAKAgJzFAAABn0DAAAEAgJzFQAABn0EAAAEKgYqbgJ7BQAABCwSAnsFAAAE
bw0AAAYCFH0FAAAEKgATMAUASQAAAAEAABEWCisuBAaUDgRyyAAAcCgcAAAKMxkCBQaaAgQGlCgd
AAAKDgRzBQAABn0FAAAEBhdYCgYDMs4CbxMAAAYCbxAAAAYCKBEAAAYqOgIoHgAACgIDfQYAAAQq
OgIoHgAACgIDfQcAAAQqlgJ7BwAABG8fAAAKctoAAHBvIAAACighAAAKbyIAAAqlDgAAASqWAnsH
AAAEbx8AAApy6gAAcG8gAAAKKCEAAApvIgAACqUOAAABKh4CKB4AAAoqrn4IAAAELR5y/gAAcNAH
AAACKCMAAApvJAAACnMlAAAKgAgAAAR+CAAABCoafgkAAAQqHgKACQAABCoafgoAAAQqHgIoJgAA
Cioucx0AAAaACgAABCoAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAABEBgAA
I34AALAGAACMBwAAI1N0cmluZ3MAAAAAPA4AAHABAAAjVVMArA8AABAAAAAjR1VJRAAAALwPAAAA
AgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPoBMwAWAAABAAAAIgAAAAgAAAAKAAAAHgAAABAA
AAAmAAAAEAAAAAEAAAAEAAAACwAAAAwAAAABAAAABQAAAAEAAAAAAIUDAQAAAAAABgCGAmUFBgAa
A2UFBgDSAVIFDwDZBQAABgD/AWIEBgBpAmIEBgBKAmIEBgABA2IEBgCmAmIEBgC/AmIEBgAWAmIE
BgAxAlUDCgDaAu8ABgDmAA4ECgDyBO8ADgDjBO8ACgCaBO8ACgDZBu8ABgCZBg4EBgC1AVIFBgAD
BYUFBgCOBE0EEgCFAW8DEgDmAW8DEgA9ATgEBgCaAWUFBgB0BA4EFgARABMFFgABABMFSwBHBwAA
FgAiABMFBgAQAQ4EBgCxAA4EBgCCB2IEAAAAAF4AAAAAAAEAAQABABAALQQAABAAAQABAAEAEADV
BAAAPQADAAUAAQAQALsGAABJAAMADwABABAAWwYAAE0ABgAUAAEAEAAjBgAATQAHABUAAAAQAIwF
6AVNAAgAGAAAARAAUgboBWUACgAcAAEAVQGNAAEAXgGNAAYAWwaRAAYAIwaVAAYA1QSZAAEAyQad
AAEAyQadABEAFQShABEALQGlABEAkACpAFAgAAAAAMYAOAMGAAEAeiAAAAAAxgBDAwYAAQCEIAAA
AADGAH0GBgABAD4hAAAAAIYYOwUGAAEARiEAAAAAhhg7BSkAAQBRIQAAAACGCGcBrQAEAGAhAAAA
AIYI3QOzAAUAdyEAAAAAhgigABAABgCBIQAAAACGCK0DswAHAJghAAAAAIYI1QAQAAgAoiEAAAAA
hgjFA7MACQC5IQAAAACGAHcHBgAKAMEhAAAAAIYAoAYGAAoAySEAAAAAhgCjBjkACgDRIQAAAACG
GDsFBgAKAPEhAAAAAMYBbwYGAAoA8yEAAAAAgQB8AAYACgAQIgAAAADGACcHuAAKAPEhAAAAAMYB
fQYGAA4AZSIAAAAAhhg7BcQADgB0IgAAAACGGDsFxAAPAIMiAAAAAIYIWwHKABAAqSIAAAAAhgh3
AcoAEADPIgAAAACDGDsFBgAQANciAAAAAJMI/wTPABAAAyMAAAAAkwgVAdQAEAAKIwAAAACTCCEB
2QAQABIjAAAAAJYIrwbfABEAGSMAAAAAhhg7BQYAEQAhIwAAAACRGEEF5AARAAAAAQD4BAAAAgAt
BgAAAwCoBAAAAQBPAwAAAQBPAwAAAQBPAwAAAQBPAwAAAQBPAwAAAQBPAwAAAQB1BgAAAgBIBQAA
AwBnBgAABACoBAAAAQDfBgAAAQDfBgAAAQBPAwkAOwUBABEAOwUGABkAOwUKACkAOwUQADEAOwUQ
ADkAOwUQAEEAOwUQAEkAOwUQAFEAOwUQAFkAOwUQAGEAOwUQAGkAOwUGAKEAOwUGAMEAOwUVANEA
OwUGAJEAOAMGAJEAQwMGAHEAkQYbAHEAIQQhAHkAOwUpAHkABQQzAHkA9AMBANkAOwUQAHkAdwcG
AHkAoAYGAHkAowY5AJEAOwUGAJEAZwBBAJEAQQZIAJkAOwUGAJEAFwZOAOEA/ANTAJEAYgdZAOkA
MwdeAAEBwwBkAAEBfgdtAKkAOwVzAMkAOwUGAC4ACwAEAS4AEwANAS4AGwAsAS4AIwA1AS4AKwBe
AS4AMwBeAS4AOwBkAS4AQwA1AS4ASwCCAS4AUwBeAS4AWwCxAUMAYwD5AeMAawD5ASkBcwAsAUEB
ewD5AUkBcwAsAT0AAwABAAYABwAHAAkACAALAAAAawHoAAAA4QPtAAAApADxAAAAsQPtAAAA2QDx
AAAAyQPtAAAAXwHoAAAAewHoAAAAAwX1AAAANQH6AAAAswb/AAEABgADAAEABwAFAAEACAAHAAEA
CQAJAAEACgALAAEACwANAAIAFgAPAAIAFwARAAIAGQATAAIAGgAVAAEAGwAVAAIAHAAXAASAAAAB
AAAAAAAAAAAAAAAAADoAAAAEAAAAAAAAAAAAAAB7AHMAAAAAAA0AAAAAAAAAAAAAAIQA6QYAAAAA
DQAAAAAAAAAAAAAAhAAGBwAAAAAEAAAAAAAAAAAAAAB7AA4EAAAAAA0AAAAAAAAAAAAAAIQAsgQA
AAAAAAAAAAEAAACWBQAAAAAAAABJRFRTVmFyaWFibGUxMDAASURUU1ZhcmlhYmxlczEwMABJRFRT
RXZhbHVhdG9yQ29udGV4dDEwMABTQ19CNzczMDkyNjQ0OUU0QURGOEVEMTBGMzEzM0ExNTQ2NwA8
TW9kdWxlPgBHZXRPdXRwdXRJRABtc2NvcmxpYgBNYXJrT3V0cHV0c0ZpbmlzaGVkAGRlZmF1bHRJ
bnN0YW5jZQBzZXRfTGFuZ3VhZ2VDb2RlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAHNldF9MYW5ndWFnZU5hbWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlw
ZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UAX0RhdGUAZ2V0X0VuZERhdGUAc2V0X0N1cnJlbnREYXRlAGdldF9T
dGFydERhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQ
b3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTQ19CNzczMDkyNjQ0OUU0QURGOEVEMTBGMzEzM0ExNTQ2Ny5kbGwAc2V0X0xhbmd1
YWdlQ29kZV9Jc051bGwAc2V0X0xhbmd1YWdlTmFtZV9Jc051bGwAc2V0X0N1cnJlbnREYXRlX0lz
TnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBvcF9MZXNz
VGhhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AQ3VsdHVyZUluZm8A
T3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3Jh
cABPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgAuY3RvcgAuY2N0
b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfODAzNjM2YzU1MmMyNGZlMWJjMWMyNjFmYTY4NDVl
MmMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzgwMzYz
NmM1NTJjMjRmZTFiYzFjMjYxZmE2ODQ1ZTJjLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFi
bGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb25uZWN0
aW9ucwBCdWZmZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBBZGREYXlzAE9i
amVjdABTZXRFbmRPZlJvd3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBv
bmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQcmltZU91dHB1dABHZXRWYWx1ZVdpdGhDb250ZXh0
AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBn
ZXRfQXNzZW1ibHkAAAAFZQBuAAAPRQBuAGcAbABpAHMAaAAABWYAcgAADUYAcgBlAG4AYwBoAACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0ACAA
MAAAD0UAbgBkAEQAYQB0AGUAABNTAHQAYQByAHQARABhAHQAZQAAcVMAQwBfADgAMAAzADYAMwA2
AGMANQA1ADIAYwAyADQAZgBlADEAYgBjADEAYwAyADYAMQBmAGEANgA4ADQANQBlADIAYwAuAFAA
cgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAhOM11H2l3kyPhAOWk9iSjQAE
IAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQUgARE5DQcAAgIRORE5CSADARJBHQgSRQUgAgEIHAMg
AAIDBwEIBgACCBJFDgUgAR0ICAQgABJxBSABEnUcBAAAEnkFIAEcEn0IAAESgIERgIUFIAASgIkH
IAIBDhKAiQi3elxWGTTgiQiJhF3NgIDMkQMGETkDBhIUAwYSGAMGEgwDBhJJAwYSVQMGElkDBhIg
BSABARE5BCABAQILIAQBCB0IHRJBEkUFIAEBEkkEIAAROQQAABJVBAAAElkFAAEBElkEAAASIAMA
AAEEKAAROQMoAAIDKAAOBAgAElUECAASWQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhj
ZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ184MDM2MzZjNTUyYzI0ZmUxYmMxYzI2MWZhNjg0
NWUyYwAABQEAAAAAHQEAGFRFTFVTIENvbW11bmljYXRpb25zIEluYwAALgEAKUNvcHlyaWdodCBA
IFRFTFVTIENvbW11bmljYXRpb25zIEluYyAyMDE0AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAAAAAtAAA
AM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwg
VmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQ
QURQQURQtAAAAMw1AAAAAAAAAAAAAOY1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYNQAAAAAA
AAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAEwEAAAAAAAAAAAAAEwENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsASsAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAACIAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAUgAZAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAABUAEUATABVAFMAIABDAG8AbQBtAHUAbgBpAGMAYQB0AGkAbwBuAHMAIABJ
AG4AYwAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADgA
MAAzADYAMwA2AGMANQA1ADIAYwAyADQAZgBlADEAYgBjADEAYwAyADYAMQBmAGEANgA4ADQANQBl
ADIAYwAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAA
KAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AQgA3ADcAMwAwADkAMgA2ADQANAA5
AEUANABBAEQARgA4AEUARAAxADAARgAzADEAMwAzAEEAMQA1ADQANgA3AC4AZABsAGwAAAB4ACoA
AQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABU
AEUATABVAFMAIABDAG8AbQBtAHUAbgBpAGMAYQB0AGkAbwBuAHMAIABJAG4AYwAgADIAMAAxADQA
AAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBp
AGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBCADcANwAzADAAOQAyADYANAA0ADkA
RQA0AEEARABGADgARQBEADEAMABGADMAMQAzADMAQQAxADUANAA2ADcALgBkAGwAbAAAAGgAJAAB
AFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AOAAwADMANgAzADYAYwA1ADUAMgBjADIA
NABmAGUAMQBiAGMAMQBjADIANgAxAGYAYQA2ADgANAA1AGUAMgBjAAAANAAIAAEAUAByAG8AZAB1
AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwA
eQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAD4NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b7730926449e4adf8ed10f3133a15467</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Package::EndDate,$Package::StartDate</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">46b46f6b69b9037dd74193c92f21b7df</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">3e2805a85975478916ee49ee166340fce1443c92</property>
              </properties>
              <outputs>
                <output
                  refId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]"
                      dataType="dbDate"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[CurrentDate]"
                      name="CurrentDate" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageCode]"
                      codePage="1252"
                      dataType="str"
                      length="3"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageCode]"
                      name="LanguageCode" />
                    <outputColumn
                      refId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageName]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      lineageId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0].Columns[LanguageName]"
                      name="LanguageName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\dft_Util_DateTextTranslation.Paths[Derived Column Output]"
              endId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Outputs[Derived Column Output]" />
            <path
              refId="Package\dft_Util_DateTextTranslation.Paths[Derived Column Output1]"
              endId="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek.Inputs[Derived Column Input]"
              name="Derived Column Output"
              startId="Package\dft_Util_DateTextTranslation\der_LoadId.Outputs[Derived Column Output]" />
            <path
              refId="Package\dft_Util_DateTextTranslation.Paths[Output 0]"
              endId="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName.Outputs[Output 0]" />
            <path
              refId="Package\dft_Util_DateTextTranslation.Paths[Output 01]"
              endId="Package\dft_Util_DateTextTranslation\der_LoadId.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\dft_Util_DateTextTranslation\scr_src_CurrDate.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\sql_Truncate_Util_DateTextTranslation"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{CF1D4228-FC95-44EB-BD41-D56143308F4D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="sql_Truncate_Util_DateTextTranslation"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2012; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{25BA1AB6-6CD3-4756-B825-F73689CC7A27}"
          SQLTask:SqlStatementSource="TRUNCATE TABLE [Util].[DateTextTranslation]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{FDD57938-8F7E-4973-BE76-FBB0E2D89914}"
      DTS:From="Package\dft_Util_DateTextTranslation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\dft_DW_DimDate" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{F77D0CF7-2732-4D23-9A5D-23422C13A21B}"
      DTS:From="Package\sql_Truncate_Util_DateTextTranslation"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\dft_Util_DateTextTranslation" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="261,42"
          Id="Package\dft_DW_DimDate"
          TopLeft="5.50000000000003,209.5" />
        <NodeLayout
          Size="261,42"
          Id="Package\dft_Util_DateTextTranslation"
          TopLeft="5.5,107.5" />
        <NodeLayout
          Size="261,42"
          Id="Package\sql_Truncate_Util_DateTextTranslation"
          TopLeft="5.5,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="136,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="136,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\dft_DW_DimDate">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\scr_WeekOfTheMonth"
          TopLeft="373.5,515.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\ole_cmd_upd_DW_DimDate_Type1Cols"
          TopLeft="373.5,923.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\ole_dst_DW_DimDate"
          TopLeft="5.50000000000017,821.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\lkp_Datamart_DimDate_AllCols"
          TopLeft="373.5,821.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\lkp_Util_DateTextTranslation_datetranslationkey"
          TopLeft="373.5,311.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\der_CalendarYearMonth"
          TopLeft="373.5,617.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\der_LoadId"
          TopLeft="373.5,107.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\scr_src_CurrDate"
          TopLeft="373.5,5.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\cpyc_DateTextTranslationKey"
          TopLeft="373.5,209.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\der_DimDateAttributes"
          TopLeft="373.5,413.5" />
        <NodeLayout
          Size="307,42"
          Id="Package\dft_DW_DimDate\lkp_Datamart_DimDate_currentdate"
          TopLeft="373.5,719.5" />
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Derived Column Output1]"
          TopLeft="527,659.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Derived Column Output]"
          TopLeft="527,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Copy Column Output]"
          TopLeft="527,251.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Output 01]"
          TopLeft="527,557.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Output 0]"
          TopLeft="527,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Lookup No Match Output1]"
          TopLeft="527,863.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,20.4453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Lookup No Match Output]"
          TopLeft="477.166666666667,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-318.166666666667,60"
              Start="0,0"
              End="-318.166666666667,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1866493843163" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1866493843163"
                    Point2="0,24.1866493843163"
                    Point3="-4,24.1866493843163" />
                  <mssgle:LineSegment
                    End="-314.166666666667,24.1866493843163" />
                  <mssgle:CubicBezierSegment
                    Point1="-314.166666666667,24.1866493843163"
                    Point2="-318.166666666667,24.1866493843163"
                    Point3="-318.166666666667,28.1866493843163" />
                  <mssgle:LineSegment
                    End="-318.166666666667,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-214.889720052083,29.1866493843163,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Lookup Match Output1]"
          TopLeft="576.833333333333,761.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.8333333333334,60"
              Start="0,0"
              End="-49.8333333333334,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1866493843163" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1866493843163"
                    Point2="0,24.1866493843163"
                    Point3="-4,24.1866493843163" />
                  <mssgle:LineSegment
                    End="-45.8333333333334,24.1866493843163" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.8333333333334,24.1866493843163"
                    Point2="-49.8333333333334,24.1866493843163"
                    Point3="-49.8333333333334,28.1866493843163" />
                  <mssgle:LineSegment
                    End="-49.8333333333334,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-73.1080533854167,29.1866493843163,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Lookup Match Output]"
          TopLeft="527,353.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,20.4453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_DW_DimDate.Paths[Derived Column Output2]"
          TopLeft="527,455.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\dft_DW_DimDate\ole_dst_DW_DimDate">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\dft_Util_DateTextTranslation">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="283,42"
          Id="Package\dft_Util_DateTextTranslation\der_MonthNumber_DayNumberOfTheWeek"
          TopLeft="5.50000000000003,208.7" />
        <NodeLayout
          Size="283,42"
          Id="Package\dft_Util_DateTextTranslation\scr_src_CurrDate"
          TopLeft="5.5,5.50000000000007" />
        <NodeLayout
          Size="283,42"
          Id="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation"
          TopLeft="5.50000000000006,411.900000000001" />
        <NodeLayout
          Size="283,42"
          Id="Package\dft_Util_DateTextTranslation\der_LoadId"
          TopLeft="5.5,107.1" />
        <NodeLayout
          Size="283,42"
          Id="Package\dft_Util_DateTextTranslation\scr_DateName_DayName_MonthName"
          TopLeft="3.10000000000002,312.7" />
        <EdgeLayout
          Id="Package\dft_Util_DateTextTranslation.Paths[Output 01]"
          TopLeft="147.1,47.1000000000001">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_Util_DateTextTranslation.Paths[Output 0]"
          TopLeft="145.9,354.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.6000000000001"
              Start="0,0"
              End="0,50.1000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.1000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_Util_DateTextTranslation.Paths[Derived Column Output1]"
          TopLeft="147.1,148.7">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60.0000000000001"
              Start="0,0"
              End="0,52.5000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dft_Util_DateTextTranslation.Paths[Derived Column Output]"
          TopLeft="145.9,250.3">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.4000000000001"
              Start="0,0"
              End="0,54.9000000000001">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.9000000000001" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\dft_Util_DateTextTranslation\ole_dst_Util_DateTextTranslation">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>